<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.emforce.wonderbox.dao.collector.AutoBidDao">

	<select id="selectKeywordsInCrashedMachine" parameterType="Integer" resultType="BidFavoriteKeyword">
		SELECT kwd_nm, target
		  FROM bid_favorite_keywords
		 WHERE process_num = #{value}
	  GROUP BY kwd_nm, target
	</select>
	
	<select id="selectOneBidFavoriteKeyword" parameterType="String" resultType="BidFavoriteKeyword">
		SELECT kwd_id,
			   IFNULL(cur_bid_amt, 0) cur_bid_amt,
			   IFNULL(cur_cpa_amt, 0) cur_cpa_amt
		  FROM bid_favorite_keywords
		 WHERE kwd_id = #{_parameter}
	</select>

	<select id="selectKwdNmAndTargetFromBidFavoriteKeywords" parameterType="Map" resultType="HashMap">
		SELECT kwd_nm, 
			   target, 
			   process_num, 
			   emergency_status
		  FROM bid_favorite_keywords
	   <where>
	   	  <if test="caller == 'module'">
	      process_num IN (SELECT process_num 
	                        FROM bid_machine_mngs 
	                       WHERE status = 'Active')
	   	  </if>
	   	  <if test="bid_status != null">
	   	    AND bid_status = #{bid_status}
	   	  </if>
		  <if test="process_num != null">
			AND process_num = #{process_num}
		  </if>
		  <if test="target != null">
		  	AND target = #{target}
		  </if>
		  <if test="emergency_status != null">
		  	<if test="emergency_status == 'True'">
		  		AND emergency_status = 'True'
		  	</if>
		  	<if test="emergency_status == 'True_final'">
		  		AND emergency_status = 'True_final'
		  	</if>		  	
		  	<if test="emergency_status == 'False'">
		  		AND emergency_status = 'False'
		  	</if>
		  </if>
	   </where>
	  GROUP BY kwd_nm, target
	</select>
	
	
	<select id="selectOneForBidAmtChangeModule" parameterType="String" resultType="HashMap">
		SELECT bf.advs_id adv_id,
			   bfk.kwd_id, 
			   ai.na_account_ser, 
			   bfk.goal_rank, 
			   bfk.max_bid_amt, 
			   bfk.site, 
			   bfk.emergency_status,
			   bfk.rank,
			   bfk.opp_gap,
			   bfk.opp_site,
			   bfk.resv_status,
			   bfk.bid_status
		  FROM bid_favorites bf,
		       (SELECT kwd_id, bid_favorites_id, goal_rank, max_bid_amt, site, emergency_status,rank, opp_gap, opp_site, resv_status, bid_status
		          FROM bid_favorite_keywords
		         WHERE kwd_id = #{_parameter}) bfk,
		       adv_infos ai
		 WHERE bf.id = bfk.bid_favorites_id
		       AND bf.advs_id = ai.adv_id
	</select>
	
	<select id="selectAllFromBidFavoritesKeywords" parameterType="BidFavoriteKeyword" resultType="BidFavoriteKeyword">
		SELECT *
		  FROM bid_favorite_keywords
		  <where>
			<if test="kwd_nm != null">
				AND kwd_nm = #{kwd_nm}
			</if>		  
			<if test="target != null">
				AND target = #{target}
			</if>
			<if test="site != null">
				AND site = #{site}
			</if>
			<if test="bid_status != null">
				AND bid_status = #{bid_status}
			</if>
		  	<if test="emergency_status == 'False'">
		  		AND emergency_status = 'False'
		  	</if>
		  	<if test="emergency_status != 'False'">
		  		AND emergency_status != 'False'
		  	</if>			
		  </where>
	</select>
	<select id="selectSearchAdId" parameterType="String" resultType="int">
		SELECT id
		FROM search_ads
		WHERE name = #{_parameter}
	</select>	
	
	<select id="selectStatusFromBidMachine" parameterType="Map" resultType="BidMachineMng">
		SELECT id, 
			   created_by, 
			   updated_by, 
			   process_num, 
			   status, 
			   cur_crashed_at, 
			   cur_rerunned_at, 
			   created_at, 
			   updated_at, 
			   ip_v4, 
			   name, 
			   `desc`
		  FROM bid_machine_mngs
		 <where>
			<if test="status != null">
				status = #{status}
			</if>
			<if test="process_num != null">
				AND process_num = #{process_num}
			</if>			 
		 </where>
	</select>
	
	<update id="updateProcessNumFromBidFavoriteKeyword" parameterType="Map">
		UPDATE bid_favorite_keywords
		   SET process_num = #{process_num}
		 WHERE kwd_nm = #{kwd_nm}
		  	   AND target = #{target}
	</update>
	
	<update id="updateCrash" parameterType="String">
		UPDATE bid_instances
		   SET updated_by = 'SYSTEM',
		       updated_at = NOW(),
		       status = 'Inactive'
		 WHERE name = #{name}
		       AND status = 'Active'
	</update>
	
	<select id="selectBidInstance" parameterType="String" resultType="BidInstance">
		SELECT *
		  FROM bid_instances
		 WHERE name = #{_parameter}
	</select>
		
	<update id="updateReRun" parameterType="String">
		UPDATE bid_machine_mngs
		   SET status = 'Active',
		   	   cur_crashed_at = NULL,
		   	   updated_at = NOW(),
		   	   cur_rerunned_at = NOW()
		 WHERE process_num != 120
			   <if test='_parameter != null'>
			   AND process_num = #{_parameter}
			   </if>
	</update>
	
	
	<select id="selectCrawlingRankKwdList" parameterType="Map" resultType="HashMap">
	SELECT bfk.kwd_nm kwd_nm, 
		   bfk.target target, 
		   bfk.process_num process_num, 
		   bfk.emergency_status emergency_status
	  FROM bid_favorite_keywords bfk,
		   (SELECT ut.kwd_id
			  FROM (SELECT kwd_id
					  FROM bid_favorite_keywords
					 WHERE bid_status IN ('Active', 'OppActive')
					 	   AND emergency_status LIKE CONCAT('%',#{emergency_status},'%')
					 	   AND process_num IN (${process_num})
						   <if test="emergency_status == 'False'">
					 	   OR
					 	   (bid_status = 'CpaActive' AND emergency_status = 'False_cpa' AND process_num IN (${process_num}))
						   </if>					 	   
					 UNION
					SELECT bct.kwd_id
					  FROM (SELECT kwd_id, color
							  FROM bid_schedule_types
						     WHERE bid_status = 'Active') bct,
						   (SELECT kwd_id, SUBSTRING_INDEX(SUBSTRING_INDEX(bid_schedule,',',#{timePosition}),',',-1) color
						      FROM bid_favorite_keywords
						     WHERE resv_status = 'Active'
						   	       AND bid_status != 'Inactive'
						           AND emergency_status LIKE CONCAT('%',#{emergency_status},'%')
						           AND process_num IN (${process_num})
						           AND bid_schedule IS NOT NULL) bfk
					 WHERE bct.kwd_id = bfk.kwd_id AND bct.color = bfk.color) ut
			 WHERE ut.kwd_id NOT IN (SELECT bfk.kwd_id
			 						FROM (SELECT kwd_id, color
									    	FROM bid_schedule_types
								       	   WHERE bid_status = 'CpaActive') bct,
								     	 (SELECT kwd_id, SUBSTRING_INDEX(SUBSTRING_INDEX(bid_schedule,',',#{timePosition}),',',-1) color
								        	FROM bid_favorite_keywords
								       	   WHERE resv_status = 'Active'
								   	       		 AND bid_status != 'Inactive'
								             	 AND emergency_status LIKE CONCAT('%',#{emergency_status},'%')
								             	 AND process_num IN (${process_num})
								             	 AND bid_schedule IS NOT NULL) bfk
						  		   WHERE bct.kwd_id = bfk.kwd_id AND bct.color = bfk.color)) kiList		 
     WHERE bfk.kwd_id = kiList.kwd_id
  GROUP BY kwd_nm, target, process_num, emergency_status
	</select>
	
	<!-- 속도 느린 Select 버전 -->
	<!-- 
	<select id="selectCrawlingRankKwdList" parameterType="Map" resultType="HashMap">
		SELECT bfk.kwd_nm, bfk.target, bfk.process_num, bfk.emergency_status
		  FROM (SELECT kwd_nm,
					   target
				  FROM bid_favorite_keywords
				 WHERE (bid_status = 'Active' OR bid_status = 'OppActive')
				 	   AND emergency_status = #{emergency_status}
				 	   AND process_num = #{process_num}
				 	   AND resv_status = 'Inactive'
			  GROUP BY kwd_nm, target
			  	 UNION
			  	SELECT kwd_nm, target
		          FROM (SELECT kwd_id, color
						  FROM bid_schedule_types
					     WHERE bid_status = 'Active') bct,
					   (SELECT kwd_id, kwd_nm, target, process_num, emergency_status, SUBSTRING_INDEX(SUBSTRING_INDEX(bid_schedule,',',#{timePosition}),',',-1) color
					      FROM bid_favorite_keywords
					     WHERE resv_status = 'Active'
					   	       AND bid_status = 'Inactive'
					           AND emergency_status = #{emergency_status}
					           AND process_num = #{process_num}
					           AND bid_schedule IS NOT NULL) bfk
				 WHERE bct.kwd_id = bfk.kwd_id AND bct.color = bfk.color
			  GROUP BY kwd_nm, target
		         UNION
				SELECT kwd_nm, target
		          FROM bid_favorite_keywords
				 WHERE process_num = #{process_num}
				 	   AND emergency_status = #{emergency_status}
				       AND resv_status = 'Active'
					   AND bid_schedule IS NOT NULL
					   AND bid_status in (  'Active' , 'OppActive')
		               AND SUBSTRING_INDEX(SUBSTRING_INDEX(bid_schedule,',',#{timePosition}),',',-1) = 0
			  GROUP BY kwd_nm, target) ut,
			   bid_favorite_keywords bfk
		 WHERE bfk.kwd_nm = ut.kwd_nm AND bfk.target = ut.target
	  GROUP BY kwd_nm, target, process_num, emergency_status
	</select>
	 -->

	
	<!-- 
		bid_status가 Active이고
		resv_status가 Inactive인 키워드
	 -->
	<select id="selectResvInactRankKeywordList" parameterType="BidFavoriteKeyword" resultType="BidFavoriteKeyword">
		SELECT ai.adv_id, 
	    	   ai.na_account_ser, 
	    	   bfk.*,
	    	   'Inactive' is_resv
		  FROM (SELECT *
				  FROM bid_favorite_keywords
				 WHERE kwd_nm = #{kwd_nm}
				       AND target = #{target}
				       AND resv_status = 'Inactive'
				       AND ((bid_status IN ( 'Active', 'OppActive') AND emergency_status = #{emergency_status}) 
				       		OR (bid_status IN ( 'CpaActive') AND emergency_status = 'False_cpa'))) bfk,
			       adv_infos ai,
	           bid_favorites bf
	     WHERE bf.id = bfk.bid_favorites_id 
	           AND bf.advs_id = ai.adv_id       
	</select>
	<select id="selectResvInactCpaKeywordList" parameterType="Map" resultType="BidFavoriteKeyword">
		SELECT ai.adv_id, 
	    	   ai.na_account_ser, 
	    	   bfk.ad_med_id,
	    	   bfk.campaign_id,
	    	   bfk.campaign_nm,
	    	   bfk.adgroup_id,
	    	   bfk.adgroup_nm,
	    	   bfk.kwd_id,
	    	   bfk.kwd_nm,
	    	   bfk.bid_favorites_id,
	    	   bfk.bid_status,
	    	   bfk.goal_rank,
	    	   bfk.max_bid_amt,
	    	   bfk.min_bid_amt,
	    	   bfk.rank,
	    	   bfk.rank_range,
	    	   bfk.last_rank_at,
	    	   bfk.cur_bid_amt,
	    	   bfk.before_bid_amt,
	    	   bfk.bid_update_at,
	    	   bfk.site,
	    	   bfk.target,
	    	   bfk.process_num,
	    	   bfk.emergency_status,
	    	   bfk.cur_cpa_amt,
	    	   bfk.goal_cpa_amt,
	    	   IFNULL(rec_clk_rnk, 0) rec_clk_rnk,
	    	   IFNULL(rec_clk_at, '1970-01-01 00:00:00') rec_clk_at,
	    	   bfk.cur_opp_rank,
	    	   bfk.opp_site,
	    	   bfk.opp_gap,
	    	   'Inactive' is_resv
		  FROM (SELECT *
		  		  FROM bid_favorite_keywords
		 		 WHERE bid_status = 'CpaActive'
		       	   AND resv_status = 'Inactive'
		       	   AND emergency_Status != 'False_cpa') bfk,
		       adv_infos ai,
	           bid_favorites bf
	     WHERE bf.id = bfk.bid_favorites_id 
	           AND bf.advs_id = ai.adv_id
	</select>
	
	
	<!-- 
		bid_status가 Inactive이고 
		resv_status가 Active이며
		현재 시간의 조건이 0이 아닌 키워드
	 -->
	<select id="selectResvActKeywordList" parameterType="Map" resultType="BidFavoriteKeyword">
	    SELECT bst.kwd_id, 
	    	   ai.adv_id, 
	    	   ai.na_account_ser, 
	    	   bst.color, 
	    	   bst.bid_status, 
	    	   bst.goal_rank, 
	    	   bst.max_bid_amt, 
	    	   bst.min_bid_amt,
	    	   bst.goal_cpa,
	    	   bfk.rank, 
	    	   bfk.rank_range,
	    	   bfk.emergency_status, 
	    	   bfk.site, 
	    	   bfk.target,
	    	   IFNULL(bfk.rec_clk_rnk, 0) rec_clk_rnk,
	    	   IFNULL(bfk.rec_clk_at, '1970-01-01 00:00:00') rec_clk_at,
	    	   'Active' is_resv
	  	  FROM (SELECT kwd_id, color, bid_status, goal_rank, max_bid_amt, min_bid_amt, goal_cpa
			      FROM bid_schedule_types
			     WHERE bid_status = #{bid_status}) bst,
		       (SELECT kwd_id, bid_favorites_id, SUBSTRING_INDEX(SUBSTRING_INDEX(bid_schedule,',',#{timePosition}),',',-1) color, rank, rank_range, site, emergency_status, target, rec_clk_rnk, rec_clk_at 
			      FROM bid_favorite_keywords
			     WHERE resv_status = 'Active'
			     	   AND bid_status != 'Inactive'
			     	   <choose>
				     	   <when test="bid_status == 'CpaActive' and type == 'rank'">
		             		AND emergency_status = 'False_cpa'
				     	   </when>
				     	   <when test="bid_status == 'CpaActive' and emergency_status == null">
				     	   		AND emergency_status != 'False_cpa'
				     	   </when>
				     	   <when test="emergency_status != null">
					  	   	  AND emergency_status = #{emergency_status}
					  	   </when>
			     	   </choose>
			     	   <if test="type == 'rank'">
				     	   AND kwd_nm = #{kwd_nm}
				     	   AND target = #{target}
			     	   </if>
	                   AND bid_schedule IS NOT NULL) bfk,
	           adv_infos ai,
	           bid_favorites bf 
	     WHERE bst.kwd_id = bfk.kwd_id 
	           AND bst.color = bfk.color 
	           AND bf.id = bfk.bid_favorites_id 
	           AND bf.advs_id = ai.adv_id
	</select>
	
	<!-- 
		bid_status가 Inactive가 아니고
		resv_status가 Active이며
		현재 시간의 조건이 0인 키워드
	 -->
	<select id="selectResvActCur0KeywordList" parameterType="Map" resultType="BidFavoriteKeyword">
		SELECT ai.adv_id, 
	    	   ai.na_account_ser, 
	    	   bfk.ad_med_id,
	    	   bfk.campaign_id,
	    	   bfk.campaign_nm,
	    	   bfk.adgroup_id,
	    	   bfk.adgroup_nm,
	    	   bfk.kwd_id,
	    	   bfk.kwd_nm,
	    	   bfk.bid_favorites_id,
	    	   bfk.bid_status,
	    	   bfk.goal_rank,
	    	   bfk.max_bid_amt,
	    	   bfk.min_bid_amt,
	    	   bfk.rank,
	    	   bfk.rank_range,
	    	   bfk.last_rank_at,
	    	   bfk.cur_bid_amt,
	    	   bfk.before_bid_amt,
	    	   bfk.bid_update_at,
	    	   bfk.site,
	    	   bfk.target,
	    	   bfk.process_num,
	    	   bfk.emergency_status,
	    	   bfk.cur_cpa_amt,
	    	   bfk.goal_cpa_amt,
	    	   bfk.opp_goal_rank,
	    	   IFNULL(rec_clk_rnk, 0) rec_clk_rnk,
	    	   IFNULL(rec_clk_at, '1970-01-01 00:00:00') rec_clk_at,
	    	   bfk.cur_opp_rank,
	    	   bfk.opp_site,
	    	   bfk.opp_gap,
	    	   'Inactive' is_resv 
		  FROM (SELECT *
				  FROM bid_favorite_keywords
				 WHERE bid_status = #{bid_status}
				       AND resv_status = 'Active'
				       <if test="type == 'rank'">
					       AND kwd_nm = #{kwd_nm}
					       AND target = #{target}
				       </if>
				       <choose>
					       <when test="bid_status == 'CpaActive' and type == 'rank'">
						  	   AND emergency_status = 'False_cpa'
					  	   </when>
					  	   <when test="bid_status == 'CpaActive' and emergency_status == null">
						  	   AND emergency_status != 'False_cpa'
					  	   </when>
					  	   <when test="emergency_status != null">
					  	   	 AND emergency_status = #{emergency_status}
					  	   </when>
				       </choose>
				  	   AND bid_schedule IS NOT NULL
					   AND SUBSTRING_INDEX(SUBSTRING_INDEX(bid_schedule,',',#{timePosition}),',',-1) = '0') bfk,
			   adv_infos ai,
	           bid_favorites bf
	     WHERE bf.id = bfk.bid_favorites_id 
	           AND bf.advs_id = ai.adv_id	   
	</select>
	
	
	
	<select id="selectAllBidFavoriteKeywords" resultType="BidFavoriteKeyword">
		SELECT bf.advs_id,
			   bfk.kwd_id, 
			   bfk.kwd_nm,
			   ai.na_account_ser, 
			   bfk.goal_rank, 
			   bfk.max_bid_amt, 
			   bfk.site, 
			   bfk.emergency_status,
			   bfk.rank,
			   bfk.opp_gap,
			   bfk.opp_site,
			   bfk.resv_status,
			   bfk.bid_status
		  FROM bid_favorites bf,
		       (SELECT kwd_id, kwd_nm, bid_favorites_id, goal_rank, max_bid_amt, site, emergency_status,rank, opp_gap, opp_site, resv_status, bid_status
		          FROM bid_favorite_keywords) bfk,
		       (SELECT na_account_ser, adv_id FROM adv_infos WHERE client_type = 'premium') ai
		 WHERE bf.id = bfk.bid_favorites_id
		       AND bf.advs_id = ai.adv_id
	</select>
	
	<update id="updateCurCpaAmtOneBidFavoriteKeyword" parameterType="Map">
		UPDATE bid_favorite_keywords
		   SET cur_cpa_amt = #{cpa}
		 WHERE kwd_id = #{kwd_id}
	</update>
	
	
	
</mapper>